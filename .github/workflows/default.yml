name: default
on: [push]

jobs:
  build:
    strategy:
      matrix:
        # See: https://github.com/actions/virtual-environments
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      # - name: Install Docker for Mac
      #   run: brew install docker docker-compose docker-machine
      #   if: runner.os == 'macOS'
      - run: docker build Dockerfile.d/node-firebase.development
      - id: file_changes
        uses: trilom/file-changes-action@v1.2.4
      - id: file_changes_space
        uses: trilom/file-changes-action@v1.2.4
        with:
          output: " "
      - name: test for file_changes
        run: |
          cat $HOME/files.json
          cat $HOME/files_modified.json
          cat $HOME/files_added.json
          cat $HOME/files_removed.json
          echo '${{ steps.file_changes.outputs.files}}'
          echo '${{ steps.file_changes.outputs.files_modified}}'
          echo '${{ steps.file_changes.outputs.files_added}}'
          echo '${{ steps.file_changes.outputs.files_removed}}'
      - name: test for file_changes_space
        run: |
          echo '${{ steps.file_changes_space.outputs.files_modified}}'
          echo '${{ steps.file_changes_space.outputs.files_added}}'
      - name: merge json files
        run: |
          jq --raw-output --slurp '[.[][]] | map(select(. | match("^Dockerfile\\.d/"))) | map(. |= (gsub("Dockerfile\\.d/(?<context>[^/]*)/.*"; "Dockerfile.d/\(.context)"))) | unique | .[]' $HOME/files_{added,modified}.json
      - name: merge json files
        run: >
          jq --raw-output --slurp '[.[][]] 
          | map(select(. | match("^Dockerfile\\.d/"))) 
          | map(. |= (gsub("Dockerfile\\.d/(?<context>[^/]*)/.*"; "Dockerfile.d/\(.context)"))) 
          | unique 
          | .[]' 
          $HOME/files_{added,modified}.json
      - name: loop entries
        run: >
          for context in $(jq --raw-output --slurp '[.[][]] 
          | map(select(. | match("^Dockerfile\\.d/"))) 
          | map(. |= (gsub("Dockerfile\\.d/(?<context>[^/]*)/.*"; "Dockerfile.d/\(.context)"))) 
          | unique 
          | .[]' \
          $HOME/files_{added,modified}.json)
          do
            echo "CONTEXT: $context"
            docker build $context
          done
      - name: loop
        run: |
          for f in '${{ steps.file_changes_space.outputs.files_modified}}' '${{ steps.file_changes_space.outputs.files_added}}'
          do
            echo "<< $f >>"
            if [[ "$f" =~ ^#Dockerfile.d/ ]]; then
              echo "<<< $f >>>"
            fi
          done
