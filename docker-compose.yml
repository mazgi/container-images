services:
  debian-node-webapp.development:
    build:
      args:
        GID: ${GID:-0}
        UID: ${UID:-0}
      context: Dockerfile.d/debian-node-webapp.development
      dockerfile: with-user.Dockerfile
    command:
      - zsh
      - --login
      - -c
      - |
        npm-check-updates --upgrade
        npm install
        npm audit fix
        sort-package-json
        npm run test
    profiles:
      - disabled
    user: "${UID:-0}:${GID:-0}"
    volumes:
      - ./code-stubs/node-webapp:/project/workspace
    working_dir: /project/workspace
  dotnet-app.development:
    build:
      args:
        GID: ${GID:-0}
        UID: ${UID:-0}
      context: Dockerfile.d/dotnet-app.development
      dockerfile: with-user.Dockerfile
    command:
      - zsh
      - --login
      - -c
      - |
        dotnet test --logger:"console;verbosity=detailed" test/
    profiles:
      - disabled
    user: "${UID:-0}:${GID:-0}"
    volumes:
      - ./code-stubs/dotnet-app:/project/workspace
    working_dir: /project/workspace
  node-firebase.development:
    build:
      args:
        GID: ${GID:-0}
        UID: ${UID:-0}
      context: Dockerfile.d/node-firebase.development
      dockerfile: with-user.Dockerfile
    command:
      - zsh
      - --login
      - -c
      - |
        echo npm install
    environment:
      - FIREBASE_TOKEN
    ports:
      - "${BIND_IP_ADDR:-127.0.0.1}:3000:3000"
      # see https://firebase.google.com/docs/emulator-suite/install_and_configure#port_configuration
      - "${BIND_IP_ADDR:-127.0.0.1}:5000:5000"
      - "${BIND_IP_ADDR:-127.0.0.1}:5001:5001"
      - "${BIND_IP_ADDR:-127.0.0.1}:8080:8080"
      - "${BIND_IP_ADDR:-127.0.0.1}:8085:8085"
      - "${BIND_IP_ADDR:-127.0.0.1}:9000:9000"
    profiles:
      - disabled
    user: "${UID:-0}:${GID:-0}"
    volumes:
      - .:/workspace
    working_dir: /workspace
  node-webapp.development:
    build:
      args:
        GID: ${GID:-0}
        UID: ${UID:-0}
      context: Dockerfile.d/node-webapp.development
      dockerfile: with-user.Dockerfile
    command:
      - zsh
      - --login
      - -c
      - |
        npm-check-updates --upgrade
        npm install
        npm audit fix
        sort-package-json
        npm run test
    profiles:
      - disabled
    user: "${UID:-0}:${GID:-0}"
    volumes:
      - ./code-stubs/node-webapp:/project/workspace
    working_dir: /project/workspace
  provisioning:
    build:
      args:
        DOCKER_GID: ${DOCKER_GID}
        GID: ${GID:-0}
        UID: ${UID:-0}
      context: Dockerfile.d/provisioning
      dockerfile: customize-example.Dockerfile
    command:
      - zsh
      - --login
      - -c
      - |
        docker-util.keep-running.zsh --reset-status
        docker-util.keep-running.zsh --record-success
        docker-util.keep-running.zsh --wait-signals
    init: true
    user: "${UID:-0}:${GID:-0}"
    volumes:
      - ./code-stubs/provisioning:/workspace
    working_dir: /workspace
  python-app.development:
    build:
      args:
        GID: ${GID:-0}
        UID: ${UID:-0}
      context: Dockerfile.d/python-app.development
      dockerfile: with-user.Dockerfile
    command:
      - zsh
      - --login
      - -c
      - |
        pip install -e .\[test\]
        python -m pytest --cov --pycodestyle module
    profiles:
      - disabled
    user: "${UID:-0}:${GID:-0}"
    volumes:
      - ./code-stubs/python-app:/project/workspace
    working_dir: /project/workspace
  ruby-webapp.development:
    build:
      args:
        GID: ${GID:-0}
        UID: ${UID:-0}
      context: Dockerfile.d/ruby-webapp.development
      dockerfile: with-user.Dockerfile
    profiles:
      - disabled
    user: "${UID:-0}:${GID:-0}"
version: "3.8"
